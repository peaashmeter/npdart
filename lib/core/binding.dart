import 'dart:async';

import 'package:flutter/material.dart';
import 'package:visual_novel/core/director.dart';
import 'package:visual_novel/core/scene.dart';

///–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ [Director] –¥–ª—è —Å–≤—è–∑—ã–≤–∞–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏: —Å—Ç—Ä–æ–∫–∏, –∑–∞–≥–æ–ª–æ–≤–∫–∏, –¥–µ–π—Å—Ç–≤–∏—è
mixin Binding {
  //TODO: –≤—ã–Ω–µ—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫—É –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–ª–∞—Å—Å

  final Map<String, Color> _colors = {
    'pushkin': Colors.blue.shade300,
    'somebody': Colors.red.shade300
  };

  final Map<String, String> _strings = {
    'somebody': '–ö–∞–∫–æ–π-—Ç–æ —á–µ–ª',
    'pushkin': '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –°–µ—Ä–≥–µ–µ–≤–∏—á',
    'onegin':
        '''‚Äã–ú–æ–π –¥—è–¥—è —Å–∞–º—ã—Ö —á–µ—Å—Ç–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª, üòÇ –∫–æ–≥–¥–∞ –Ω–µ –≤ —à—É—Ç–∫—É –∑–∞–Ω–µ–º–æ–≥, –æ–Ω —É–≤–∞–∂–∞—Ç—å —Å–µ–±—è –∑–∞—Å—Ç–∞–≤–∏–ª –∏ –ª—É—á—à–µ –≤—ã–¥—É–º–∞—Ç—å –Ω–µ –º–æ–≥. –ï–≥–æ –ø—Ä–∏–º–µ—Ä –¥—Ä—É–≥–∏–º –Ω–∞—É–∫–∞; –Ω–æ, –±–æ–∂–µ –º–æ–π, –∫–∞–∫–∞—è —Å–∫—É–∫–∞ —Å –±–æ–ª—å–Ω—ã–º —Å–∏–¥–µ—Ç—å –∏ –¥–µ–Ω—å –∏ –Ω–æ—á—å, –Ω–µ –æ—Ç—Ö–æ–¥—è –Ω–∏ —à–∞–≥—É –ø—Ä–æ—á—å! –ö–∞–∫–æ–µ –Ω–∏–∑–∫–æ–µ –∫–æ–≤–∞—Ä—Å—Ç–≤–æ –ø–æ–ª—É–∂–∏–≤–æ–≥–æ –∑–∞–±–∞–≤–ª—è—Ç—å, –µ–º—É –ø–æ–¥—É—à–∫–∏ –ø–æ–ø—Ä–∞–≤–ª—è—Ç—å, –ø–µ—á–∞–ª—å–Ω–æ –ø–æ–¥–Ω–æ—Å–∏—Ç—å –ª–µ–∫–∞—Ä—Å—Ç–≤–æ, –≤–∑–¥—ã—Ö–∞—Ç—å –∏ –¥—É–º–∞—Ç—å –ø—Ä–æ —Å–µ–±—è: –∫–æ–≥–¥–∞ –∂–µ —á–µ—Ä—Ç –≤–æ–∑—å–º–µ—Ç —Ç–µ–±—è!''',
    's2': '—ã',
    'choice1': '–ü–∏—Ç–æ–Ω ‚Äì –ª—É—á—à–∏–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è!',
    'choice2': '–ú–æ–µ –º–Ω–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤—ã—Ä–∞–∂–∞–µ—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–º —Å–∏–º–≤–æ–ª–æ–º: üñï',
  };

  ///–¢–∞–±–ª–∏—Ü–∞ —Ñ—É–Ω–∫—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–∑—ã–≤–∞—é—Ç—Å—è –ø—Ä–∏ —Å–æ–≤–µ—Ä—à–µ–Ω–∏–∏ –¥–µ–π—Å—Ç–≤–∏—è —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º –∞–π–¥–∏
  final Map<String, Function> _functions = {
    'next_scene': (Scene? caller) {
      assert(caller != null);
      assert(caller!.nextScene != null);
      Director().setScene(caller!.nextScene!);
    },
    'choice1': () {
      Director().setScene('scene2');
    },
    'choice2': () {}
  };

  ///–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–≤–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã —Å–≤—è–∑—ã–≤–∞–Ω–∏—è –ø–æ –µ–≥–æ –∞–π–¥–∏.
  Color getColor(String? id) {
    if (id == null) return Colors.white;
    assert(_colors.containsKey(id),
        'Binding table does not contain color with id $id.');
    return (_colors[id] ?? Colors.white);
  }

  ///–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏–∑ —Ç–∞–±–ª–∏—Ü—ã —Å–≤—è–∑—ã–≤–∞–Ω–∏—è –ø–æ –µ—ë –∞–π–¥–∏.
  String getString(String? id) {
    if (id == null) return '';
    assert(_strings.containsKey(id),
        'Binding table does not contain string with id $id.');
    return (_strings[id] ?? '');
  }

  ///–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ —Ç–∞–±–ª–∏—Ü—ã —Å–≤—è–∑—ã–≤–∞–Ω–∏—è –ø–æ –µ—ë –∞–π–¥–∏.
  Function getFunction(String? id) {
    if (id == null) return () {};
    assert(_functions.containsKey(id),
        'Binding table does not contain function with id $id.');
    return (_functions[id] ?? () {});
  }
}
